From a197fb3644144f8c5fe4ea52dee195d7e3798313 Mon Sep 17 00:00:00 2001
From: mrgreywater <mr.greywater@googlemail.com>
Date: Sat, 8 Aug 2015 20:44:11 +0200
Subject: [PATCH] Fix for holding buttons on remotes of Philips TVs

This fix generates a user-control-released event in case there are two consecutive user-control-pressed events of the same key without the release in between.
---
 src/libcec/implementations/PHCommandHandler.cpp | 23 +++++++++++++++++++++--
 1 file changed, 21 insertions(+), 2 deletions(-)

diff --git a/src/libcec/implementations/PHCommandHandler.cpp b/src/libcec/implementations/PHCommandHandler.cpp
index 68828a8..682c781 100644
--- a/src/libcec/implementations/PHCommandHandler.cpp
+++ b/src/libcec/implementations/PHCommandHandler.cpp
@@ -131,9 +131,28 @@ bool CPHCommandHandler::ActivateSource(bool bTransmitDelayedCommandsOnly /* = fa
 
 int CPHCommandHandler::HandleUserControlPressed(const cec_command& command)
 {
-  // TV sometimes keeps sending key presses without releases
+  // TV sends key presses without releases when holding a button
   if (m_iLastKeyCode == command.parameters[0])
-    return COMMAND_HANDLED;
+  {
+    // TV keeps sending key presses after pressing the display information key once (arguably another firmware bug)
+    // So we only allow holding buttons forwarded from the 'device menu control feature' (see cec specs 1.3a table 27)
+    if (m_iLastKeyCode <= CEC_USER_CONTROL_CODE_LEFT_DOWN ||  
+        m_iLastKeyCode == CEC_USER_CONTROL_CODE_EXIT || 
+       (m_iLastKeyCode >= CEC_USER_CONTROL_CODE_NUMBER0 && m_iLastKeyCode <= CEC_USER_CONTROL_CODE_NUMBER9) || 
+       (m_iLastKeyCode >= CEC_USER_CONTROL_CODE_F1_BLUE && m_iLastKeyCode <= CEC_USER_CONTROL_CODE_F5))
+    {
+      cec_command release;
+      release.parameters.size = 0;
+      release.opcode = CEC_OPCODE_USER_CONTROL_RELEASE;
+      release.initiator = command.initiator;
+      release.destination = command.destination;
+      CCECCommandHandler::HandleUserControlRelease(release);
+    }
+    else
+    {
+      return COMMAND_HANDLED;
+    }
+  }
 
   m_iLastKeyCode = command.parameters[0];
 
